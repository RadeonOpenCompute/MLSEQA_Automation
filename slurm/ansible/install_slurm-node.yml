---

# - hosts: localhost
#   roles:
#     - kwoodson.yedit
#
#   vars_files:
#     - ./vars.yml
#
#   tasks:
#   - name: change munge folder as insecure
#     file:
#       path: /etc/munge
#       owner: "{{ superuser }}"
#       group: "{{ superuser }}"
#       mode: '0755'
#     become: yes
#     become_method: sudo
#
#   - name: change munge.key file as insecure
#     file:
#       path: /etc/munge/munge.key
#       owner: "{{ superuser }}"
#       group: "{{ superuser }}"
#       mode: '0755'
#     become: yes
#     become_method: sudo
#
#   - name: fetch the IP
#     shell: "hostname -I | awk '{print $1}'"
#     register: ipinfo
#     become: yes
#     become_method: sudo
#
#   - name: Test for line
#     shell: cat ./vars.yml | grep masterip | wc -l
#     register: test_grep
#     become: yes
#     become_method: sudo
#
#     #- name: add ip in vars.yml
#     #lineinfile:
#     #dest: ./vars.yml
#     #line: 'masterip: {{ ipinfo.stdout }}'
#     #when: test_grep.stdout == "0"
#     #become: yes
#     #become_method: sudo
#
#   - name: add ip in vars.yml
#     yedit:
#       src: ./vars.yml
#       key: "masterip"
#       value: '{{ ipinfo.stdout }}'
#     become: yes
#     become_method: sudo
#
#   - name: fetch the hostname
#     shell: "hostname"
#     register: hostinfo
#     become: yes
#     become_method: sudo
#
#
#   - name: Test for line
#     shell: cat ./vars.yml | grep masterhostname | wc -l
#     register: test_grep1
#     become: yes
#     become_method: sudo
#
#
#   - name: add ip in vars.yml
#     yedit:
#       src: ./vars.yml
#       key: "masterhostname"
#       value: '{{ hostinfo.stdout }}'
#     become: yes
#     become_method: sudo
#
#
#   - name: copy latest munge key to node folder
#     copy:
#       src: /etc/munge/munge.key
#       dest: ./files/etc/munge/
#       owner: "{{ superuser }}"
#       group: "{{ superuser }}"
#       mode: '0755'
#     become: yes
#     become_method: sudo



- hosts: slurm-node
    #hosts1:10.130.166.205
  #vars:
  #ansible_ssh_user='ansible'
  #ansible_ssh_pass='AH64_uh1'
  #ansible_connection=ssh

  vars_files:
    - ./vars.yml

  tasks:

#   - name: Run the equivalent of apt-get update as a separate step
#     apt:
#       update_cache: yes
#     become: yes
#     become_method: sudo
#
#   - name: Ensure required softwares are installed
#     apt:
#       name: "{{ pre_req_softwares }}"
#       state: present
#     become: yes
#     become_method: sudo
#
#   - name: change munge folder as insecure
#     file:
#       path: /etc/munge/
#       owner: "{{ superuser }}"
#       group: "{{ superuser }}"
#     become: yes
#     become_method: sudo
#
#
#   - name: delete newly installed munge key
#     file:
#       path: /etc/munge/munge.key
#       state: absent
#     become: yes
#     become_method: sudo
#
#
#     #- name: copy file from local host to remote host (relative path, ./files/)
#     #copy:
#     #src: /etc/munge/munge.key
#     #dest: $HOME/test_file
#
#
#   - name: copy munge key file to host
#     copy:
#       src: /etc/munge/munge.key
#       dest: /etc/munge/munge.key
#       owner: munge
#       group: munge
#       mode: 0400
#     become: yes
#     become_method: sudo
#
# - hosts: localhost
#
#   vars_files:
#     - ./vars.yml
#
#   tasks:
#   - name: change munge folder as secure
#     file:
#       path: /etc/munge
#       owner: "{{ mungeuser }}"
#       group: "{{ mungeuser }}"
#       mode: '0755'
#     become: yes
#     become_method: sudo
#
#   - name: change munge.key file as secure
#     file:
#       path: /etc/munge/munge.key
#       owner: "{{ mungeuser }}"
#       group: "{{ mungeuser }}"
#       mode: '0400'
#     become: yes
#     become_method: sudo
#
#
# - hosts: slurm-node
#   vars_files:
#     - ./vars.yml
#   tasks:
#
#   - name: enable munge service
#     service:
#           name: munge
#           enabled: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: start munge service
#     service:
#           name: munge
#           state: started
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: create storage directory
#     command: bash -lc "mkdir /storage"
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: change to storage directory and git clone
#     command: "git clone https://github.com/mknoxnv/ubuntu-slurm.git"
#     args:
#       chdir: /storage
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: install required tools
#     apt:
#       name: "{{ tools }}"
#       state: present
#     become: yes
#     become_method: sudo
#
#
#   - name: start slurm installation process
#     command: "{{ item }}"
#     args:
#       chdir: "/storage"
#     with_items:
#
#        - "wget https://download.schedmd.com/slurm/slurm-20.02-latest.tar.bz2"
#             #- "sudo tar xvjf {{ slurm_version }}.tar.bz2"
#             #- "wget http://10.128.142.190:8081/artifactory/slurm_amd_plgn_package/slurm-20.02-latest.tar.bz2"
#        - "tar -xf slurm-20.02-latest.tar.bz2"
#     become: yes
#     become_method: sudo
#
#
#   - name : compiling, building, installing slurm
#     command: "{{ item }}"
#     args:
#       chdir: "/storage/{{ slurm_version }}"
#     with_items:
#             #- "make clean"
#        - "./configure --prefix=/tmp/slurm-build --sysconfdir=/etc/slurm --enable-pam --with-pam_dir=/lib/x86_64-linux-gnu/security/ --without-shared-libslurm"
#        - "make"
#        - "make contrib"
#        - "sudo make install"
#     become: yes
#     become_method: sudo
#
#
#   - name: install fpm
#     command: bash -lc "gem install fpm"
#     become: yes
#     become_method: sudo
#
#
#   - name: slurm initialization
#     command: "{{ item }}"
#     args:
#       chdir: "/storage"
#     with_items:
#        - "fpm -s dir -t deb -v 1.0 -n {{ slurm_version }} --prefix=/usr -C /tmp/slurm-build ."
#        - "dpkg -i {{ slurm_version }}_1.0_amd64.deb"
#        - "mkdir /etc/slurm"
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: slurm initialization
#     command: "{{ item }}"
#     with_items:
#        - "cp /storage/ubuntu-slurm/slurm.conf /etc/slurm/"
#        - "cp /storage/ubuntu-slurm/gres.conf /etc/slurm/gres.conf"
#        - "cp /storage/ubuntu-slurm/cgroup.conf /etc/slurm/cgroup.conf"
#        - "cp /storage/ubuntu-slurm/cgroup_allowed_devices_file.conf /etc/slurm/cgroup_allowed_devices_file.conf"
#     become: yes
#     become_method: sudo
#
#   - name: create storage directory
#     command: bash -lc "mkdir -p "/var/spool/slurm/d""
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#   # - name: Add the user 'slurm'
#   #   user:
#   #     name: slurm
#   #   become: yes
#   #   become_method: sudo
#
#   - name: Ensure group "somegroup" exists
#     command: "{{ item }}"
#     with_items:
#        - "groupadd -g 992 slurm"
#        - "useradd slurm --gid 992 --uid 995"
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: copy slurmd service
#     copy:
#        src: /storage/ubuntu-slurm/slurmd.service
#        dest: /etc/systemd/system
#        remote_src: yes
#     become: yes
#     become_method: sudo
#
#   - name: Change munge folder ownership,
#     file:
#        path: /etc/munge/
#        mode: 755
#     become: yes
#     become_method: sudo
#
#   - name: enable slurmd service
#     service:
#           name: slurmd
#           enabled: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: start slurmd service
#     service:
#           name: slurmd
#           state: started
#     ignore_errors: yes
#     become: yes
#     become_method: sudo
#
#
#   - name: copy the cookie
#     shell: "slurmd -C"
#     register: nodeinfo
#     become: yes
#     become_method: sudo
#
#   - name : Copy cookie to empty file
#     shell: echo "{{ nodeinfo.stdout }}" > ./nodeinfo.properties
#     delegate_to: 127.0.0.1
#     become: yes
#     become_method: sudo
#
#   - name: Adding/setting Mastre IP
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^#ControlAddr='
#       line: 'ControlAddr={{ masterip }}'
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^ControlMachine='
#       line: 'ControlMachine={{ masterhostname }}'
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^SelectType=select/cons_res'
#       line: 'SelectType=select/cons_tres'
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^SelectTypeParameters=CR_Core_Memory,CR_CORE_DEFAULT_DIST_BLOCK,CR_ONE_TASK_PER_CORE'
#       line: 'SelectTypeParameters=CR_Core_Memory,CR_CORE_DEFAULT_DIST_BLOCK,CR_ONE_TASK_PER_CORE'
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: absent
#       regexp: '^FastSchedule=1'
#       #line: 'FastSchedule=2'
#     become: yes
#     become_method: sudo
#
#   # - name: Adding configuration
#   #   lineinfile:
#   #     dest: /etc/slurm/slurm.conf
#   #     state: present
#   #     regexp: '^PartitionName=debug Nodes=ALL Default=YES MaxTime=INFINITE State=UP'
#   #     line: 'PartitionName=debug State=UP PreemptMode=REQUEUE Priority=10000 Shared=FORCE:1'
#   #   become: yes
#   #   become_method: sudo
#
#
#   - name: copy the cookie
#     shell: "cat nodeinfo.properties"
#     register: nodeinfo
#     delegate_to: 127.0.0.1
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^NodeName=linux1 Gres=gpu:8 CPUs=80 Sockets=2 CoresPerSocket=20 ThreadsPerCore=2 RealMemory=515896 State=UNKNOWN'
#       line: "{{ nodeinfo.stdout }}"
#       insertbefore: '^PartitionName=debug State=UP PreemptMode=REQUEUE Priority=10000 Shared=FORCE:1'
#     become: yes
#     become_method: sudo
#
#   - name: Make sure "Uptime" not in slurm configuration
#     lineinfile:
#       path: /etc/slurm/slurm.conf
#       state: absent
#       regexp: '^UpTime'
#     become: yes
#     become_method: sudo
#
#   - name: start slurmd service
#     service:
#           name: slurmd
#           state: started
#     become: yes
#     become_method: sudo


  - name: download gres,cgroups conf files
    get_url:
      url: "http://10.128.142.190:8081/artifactory/slurm_amd_plgn_package/{{ item }}"
      dest: /etc/slurm/
      url_username: admin
      url_password: Admin@1234
    with_items:
       - "cgroup.conf"
       - "cgroup_allowed_devices_file.conf"
       - "gres.conf"
    become: yes
    become_method: sudo



  #  - name: install required
  #  apt:
  #    name: "{{ item }}"
  #    state: present



# - hosts: localhost
#   vars_files:
#     - ./vars.yml
#   tasks:
#
#   - name: copy the cookie
#     shell: "cat nodeinfo.properties"
#     register: nodeinfo
#     delegate_to: 127.0.0.1
#     become: yes
#     become_method: sudo
#
#   - name: Adding configuration
#     lineinfile:
#       dest: /etc/slurm/slurm.conf
#       state: present
#       regexp: '^NodeName=linux1 Gres=gpu:8 CPUs=80 Sockets=2 CoresPerSocket=20 ThreadsPerCore=2 RealMemory=515896 State=UNKNOWN'
#       line: "{{ nodeinfo.stdout }}"
#       insertbefore: '^PartitionName=debug State=UP PreemptMode=REQUEUE Priority=10000 Shared=FORCE:1'
#     become: yes
#     become_method: sudo
#
#   - name: Make sure "Uptime" not in slurm configuration
#     lineinfile:
#       path: /etc/slurm/slurm.conf
#       state: absent
#       regexp: '^UpTime'
#     become: yes
#     become_method: sudo
#
#   - name: start slurmd service
#     service:
#           name: slurmctld
#           state: started
#     become: yes
#     become_method: sudo
